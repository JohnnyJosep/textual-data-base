// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TextualDatabaseApi.Persistence;

namespace TextualDatabaseApi.Persistence.Migrations
{
    [DbContext(typeof(TextualDbContext))]
    [Migration("20201210174454_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TextualDatabaseApi.Domain.AttributeValue", b =>
                {
                    b.Property<int>("TextEntryId")
                        .HasColumnType("integer");

                    b.Property<int>("TextAttributeId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("TextEntryId", "TextAttributeId");

                    b.HasIndex("TextAttributeId");

                    b.ToTable("AttributeValues");
                });

            modelBuilder.Entity("TextualDatabaseApi.Domain.TextAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TextAttributes");
                });

            modelBuilder.Entity("TextualDatabaseApi.Domain.TextEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<byte[]>("Metadata")
                        .HasColumnType("bytea");

                    b.Property<string>("PartOfSpeech")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TextEntries");
                });

            modelBuilder.Entity("TextualDatabaseApi.Domain.AttributeValue", b =>
                {
                    b.HasOne("TextualDatabaseApi.Domain.TextAttribute", "TextAttribute")
                        .WithMany()
                        .HasForeignKey("TextAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TextualDatabaseApi.Domain.TextEntry", "TextEntry")
                        .WithMany()
                        .HasForeignKey("TextEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TextAttribute");

                    b.Navigation("TextEntry");
                });
#pragma warning restore 612, 618
        }
    }
}
